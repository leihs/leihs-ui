jobs:
  # NOTE: the other jobs depend on build, even though its not strictly needed because of caching, but so we know where to look for the full log
  build:
    name: Build `dist`
    run_when:
      any branch is pushed: { type: branch, include_match: ^.*$ }
    include: cider-ci/task-components/defaults.yml
    tasks:
      build:
        include: cider-ci/task-components/build.yml

  lint:
    name: Lint
    depends_on:
      build is done: { type: job, job_key: build, states: [passed] }
    run_when:
      any branch is pushed: { type: branch, include_match: ^.*$ }
      build is done: { type: job, job_key: build, states: [passed] }
    include: cider-ci/task-components/defaults.yml
    tasks:
      lint:
        include: cider-ci/task-components/lint.yml

  test:
    name: Test
    depends_on:
      build is done: { type: job, job_key: build, states: [passed] }
    run_when:
      any branch is pushed: { type: branch, include_match: ^.*$ }
      build is done: { type: job, job_key: build, states: [passed] }
    include: cider-ci/task-components/defaults.yml
    tasks:
      build-and-test:
        include: 
          - cider-ci/task-components/build.yml
          - cider-ci/task-components/test.yml

  all-ok:
    name: 'All Tests OK'
    depends_on: &ALLOK_DEP
      test passed: { type: job, job_key: test, states: [passed] }
      build passed: { type: job, job_key: build, states: [passed] }
      lint passed: { type: job, job_key: lint, states: [passed] }
    run_when: *ALLOK_DEP
    task: 'echo ALL OK'

  good-to-merge:
    name: 'âš‘ Good To Merge'
    depends_on: &MERGE_DEP
      all passed: { type: job, job_key: all-ok, states: [passed] }
    run_when: *MERGE_DEP
    tasks:
      # NOTE: "linear history" is already enforced via GitHub branch protection
      git-branch-current:
        name: 'git: tree contains latest commit from origin/master'
        aggregate_state: satisfy-last # relies on external state!
        scripts:
          test:
            body: |
              #!/usr/bin/env bash
              set -eu

              # check if your tree still contains the current commit from master
              git fetch --all -q 1>&2

              git rev-list --children HEAD | grep -q "$(git rev-parse origin/master)"

              echo "OK"
