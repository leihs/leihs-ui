/*
 * Component Styles for Borrow Mobile App
 */

/* Component: CartBadge (circle indicating the number of items in the shopping cart) */

.cart-badge {
  background-color: $body-color;
  color: white;
  font-size: 14px;
  border-radius: 19px;
  min-width: 19px;
  height: 19px;
  padding: 0.5px 5px 0 5px;
  text-align: center;

  &--with-conflict {
    background-color: $red !important;
  }
}

/* Component: SectionTitle (collapsible) */

.section-title {
  &__arrow-icon {
    margin-left: 0.7rem;
    margin-bottom: 0.1rem;

    &--collapsed {
      transform: scale(1, -1);
    }
  }
}

/* Component: Square Image Grid */

.square-image-grid {
  &__favorite-marker {
    padding-right: 0.5rem;
    padding-top: 0.15rem;
    right: 0;
    top: 0;
    z-index: 1;
  }
}

/* CSS Component: .gallery-button */

.gallery-button {
  display: inline-block;
  border: none;
  background-color: $gray;
  width: 0.5em;
  height: 0.5em;
  padding: 0.25rem;
  border-radius: 0.5em;
  text-align: center;
  margin: auto 0.1875em;

  &--selected {
    background-color: $black;
  }
}

/* Component: Styling wrapper for @leihs/calendar (referenced by DatePicker AND DateRangePicker) */

.leihs-calendar {
  .rdrCalendarWrapper,
  .rdrDateRangeWrapper {
    margin: auto;
    font-size: 0.75rem;
  }

  .rdrMonthAndYearWrapper {
    padding: 1.2rem 0.9rem 0.4rem 0.9rem;
    height: auto;
  }

  .rdrMonthAndYearPickers {
    font-size: 1rem;
  }

  .rdrMonth {
    padding: 0 0.75rem 0.5rem 0.75rem;
    width: initial;
  }

  .rdrDay {
    background-color: transparent;
  }

  .rdrMonthPassiveOverlay {
    background-color: transparent;
  }

  .rdrNextPrevButton {
    background-color: transparent;

    & > i {
      display: none;
    }

    $leihs-calendar-icon: url("data:image/svg+xml,<svg width='12' height='21' xmlns='http://www.w3.org/2000/svg'><path stroke='currentColor' stroke-width='1.8' d='M1.25 1l9.5 9.5-9.5 9.5' fill='none' fill-rule='evenodd' stroke-linecap='round' stroke-linejoin='round'/></svg>");
    background-image: escape-svg($leihs-calendar-icon);
    background-repeat: no-repeat;
    background-size: 12px 21px;
    background-position: 50% 0;

    &.rdrPprevButton {
      transform: scale(-1, 1);
    }
  }

  .rdrWeekDay {
    color: $body-color;
    font-weight: $font-weight-normal;
    text-transform: uppercase;
  }

  .rdrDayNumber {
    font-weight: $font-weight-normal;
  }

  // Selection preview
  .rdrDayStartPreview,
  .rdrDayInPreview,
  .rdrDayEndPreview {
    border-color: $blue;
    filter: none;
  }

  // Selection
  .rdrDay:not(.rdrDayPassive) {
    .rdrInRange,
    .rdrStartEdge,
    .rdrEndEdge,
    .rdrSelected {
      background-color: $blue;
      filter: none;
      & ~ .rdrDayNumber {
        span {
          color: white;
        }
      }
    }

    .rdrInRange,
    .rdrStartEdge,
    .rdrEndEdge,
    .rdrDayInPreview,
    .rdrDayStartPreview,
    .rdrDayEndPreview {
      border-radius: 0;
    }
    .rdrStartEdge,
    .rdrDayStartPreview {
      border-top-left-radius: 2em;
      border-bottom-left-radius: 2em;
    }
    .rdrEndEdge,
    .rdrDayEndPreview {
      border-top-right-radius: 2em;
      border-bottom-right-radius: 2em;
    }
  }

  // Disabled start/end dates
  @mixin start-end-warn-icon {
    $leihs-calendar-cross-icon: url("data:image/svg+xml,<svg width='10' height='10' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd' stroke-linecap='round' stroke-linejoin='round' stroke='white' stroke-width='1.4'><path d='M1 1l8 8M9 1L1 9'/></g></svg>");
    background-image: escape-svg($leihs-calendar-cross-icon);
    background-repeat: no-repeat;
    background-size: 10px 10px;
    background-position: 50% 50%;
    color: transparent;
  }
  // Non-pickup days
  .rdrDayDisabledStart:not(.rdrDayPassive) {
    background-color: rgba(0, 0, 0, 0.03);
    .rdrStartEdge {
      background-color: $red;
      & ~ .rdrDayNumber span {
        @include start-end-warn-icon();
        color: transparent !important;
      }
    }
    .rdrDayStartPreview {
      border-color: $red;
    }
  }
  // Non-return days
  .rdrDayDisabledEnd:not(.rdrDayPassive) {
    background-color: rgba(0, 0, 0, 0.03);
    .rdrEndEdge {
      background-color: $red;
      & ~ .rdrDayNumber span {
        @include start-end-warn-icon();
        color: transparent !important;
      }
    }
    .rdrDayEndPreview {
      border-color: $red;
    }
  }

  // Days in past (FIXME: It's a hack. Days in past are only disabled as start but not as end days. leihs-calendar should allow to mark past days)
  .rdrDayDisabledStart:not(.rdrDayPassive):not(.rdrDayDisabledEnd) {
    background-color: transparent;
    .rdrDayNumber {
      span {
        color: rgba(0, 0, 0, 0.4);
      }
    }
  }

  // Days with under-availability
  .rdrDayDisabled {
    .rdrDayNumber span {
      color: $black;
    }

    &:not(.rdrDayPassive) {
      // (the above selector only to match specifity of inherited css and avoid !important)

      background-image: repeating-linear-gradient(
        135deg,
        transparent,
        transparent 5px,
        rgba($red, 0.25) 0,
        rgba($red, 0.25) 6px
      );
      background-attachment: fixed;

      .rdrInRange,
      .rdrStartEdge,
      .rdrEndEdge,
      .rdrSelected {
        background-color: $red;
      }

      .rdrDayStartPreview,
      .rdrDayInPreview,
      .rdrDayEndPreview {
        border-color: $red;
      }

      .rdrDayNumber {
        span {
          text-decoration: none;
        }
      }
    }
  }

  // days of adjacent months ("passive")
  .rdrDayPassive {
    background-color: transparent;
    .rdrDayNumber {
      span {
        color: transparent;
        &:after {
          display: none; // marker for today
        }
      }
    }
  }

  // marker for today
  .rdrDayToday .rdrDayNumber span {
    font-weight: $font-weight-normal;
    &:after {
      background: $body-color;
    }
  }
}

/* Component: DateRangePicker (see also .leihs-calendar) */

.date-range-picker {
  // hide the div with the built-in input fields
  .rdrDateDisplayWrapper {
    display: none;
  }
  // box's height should not change depending on number of weeks
  .rdrMonth {
    height: 16rem;
  }

  // red border when invalid
  .rdrCalendarWrapper {
    border: 1px solid transparent;
  }
  &.invalid-date-range .rdrCalendarWrapper {
    border-color: $red;
  }
}

/* Component: DatePicker (see also .leihs-calendar) */

.date-picker {
  .leihs-calendar {
    overflow: hidden;
    transition: max-height 0.4s;
    max-height: 0;

    .rdrCalendarWrapper {
      border: 1px solid transparent;
      border-top-width: 0;
    }
  }

  &--calendar-active {
    .form-control {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      border-color: $blue;
      border-bottom-color: $light-gray !important;
    }

    .leihs-calendar {
      max-height: 23rem; // needed for the animation. not an exact value, just a bit more than needed
      .rdrCalendarWrapper {
        border-color: $blue;
      }
    }

    &.date-picker--invalid {
      .leihs-calendar {
        .rdrCalendarWrapper {
          border-color: $red;
        }
      }
    }
  }
}

/* Component: LabelInside */

.label-inside {
  display: block;
  position: relative;

  label:first-of-type {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    border: $input-border-width solid transparent;
    padding: $input-padding-y 0 $input-padding-y $input-padding-x;
    width: 4rem;
    white-space: nowrap;
    overflow: hidden;
  }

  :is(input, textarea, select):first-of-type {
    padding-left: 4.25rem;
  }
}

/* Component: Modal (fine tuning: position of title and close button) */
.dismissible-modal-header {
  padding-left: 30px;
  padding-right: 30px;
  .btn-close {
    position: absolute;
    top: 17px;
    right: 20px;
  }
}

/* Component: Menu */
.leihs-menu-item {
  &--selected {
    background-color: $gray-600 !important;
    color: $light !important;
  }
}

/* Component: Info message */
$info-color: $gray-600;
$info-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='#{$info-color}'><circle cx='6' cy='6' r='4.5'/><line stroke-linecap='round' stroke-width='1.2' x1='6' x2='6' y1='6' y2='8' /><circle cx='6' cy='4.2' r='.7' fill='#{$info-color}' stroke='none'/></svg>");
.info-message {
  text-indent: -1.5em;
  padding-left: 1.5em;
  font-size: $font-size-sm;
  color: $info-color;

  &::before {
    content: '';
    background-image: escape-svg($info-icon);
    background-repeat: no-repeat;
    padding-left: 1.5em;
    background-position: 0 0.0625em;
    background-size: 1.2em;
    width: 2em;
    display: inline;
  }
}

/* Component: Page Layout */
$layout-width: 1000px;
.page-layout {
  min-height: 100vh;

  &__top-bar {
    position: fixed;
    z-index: 100;
    top: 0;
    width: 100%;
    height: 51px;
    background-color: $light-shade;
    border-bottom: 1px solid $border-color;
  }

  &__top-bar-container {
    @include media-breakpoint-up(lg) {
      & {
        padding-left: 10px;
        max-width: $layout-width;
        margin: 0 auto;
      }
    }
  }

  &__main {
    min-height: 100vh;
    padding-top: 51px;

    @include media-breakpoint-up(lg) {
      & {
        margin: 0 auto;
        padding-left: 15px;
        padding-right: 15px;
        max-width: $layout-width;
        position: relative;
      }
    }
  }

  &__nav {
    position: fixed;
    z-index: 100;
    height: calc(100vh - 51px);
    top: 51px;
    left: 0;
    width: 100%;
    padding-top: 50px;
    padding-bottom: 50px;
    overflow-y: auto;
    overscroll-behavior-y: contain;
    background-color: $light-shade;
    @include media-breakpoint-up(lg) {
      & {
        padding-top: 30px;
        left: calc(50% - $layout-width / 2 + 15px);
        width: 300px;
        background-color: transparent;
      }
    }
  }

  &__flyout {
    position: fixed;
    z-index: 100;
    height: calc(100vh - 51px);
    top: 51px;
    right: 0;
    width: 100%;
    padding-top: 50px;
    padding-bottom: 50px;
    overflow-y: auto;
    overscroll-behavior-y: contain;
    background-color: $light-shade;
    @include media-breakpoint-up(md) {
      & {
        padding-top: 30px;
        width: 440px;
        border-left: 1px solid $gray;
      }
    }
  }

  &__content {
    min-height: calc(100vh - 51px);
    padding-top: 30px;
    padding-bottom: 4rem;
    margin: 0 auto;
    max-width: 700px;

    @include media-breakpoint-up(lg) {
      & {
        max-width: $layout-width - 300px - 40px;
        padding-top: 50px;
        margin-left: 300px + 40px;
      }
    }
  }

  &__nav-container {
    margin: 0 auto;
    max-width: 400px;
  }
}

/* Component: Slide Button */

.slide-button {
  display: none;
  position: absolute;
  z-index: 1;
  top: 50%;
  transform: translateY(-50%);
  padding: 0.5rem;
  width: 3.5rem;
  height: 3.5rem;

  &--previous {
    left: 0;
    text-align: left;
    padding-left: 0.9rem;
  }

  &--next {
    right: 0;
    text-align: right;
    padding-right: 0.9rem;
  }
}

@include media-breakpoint-up(md) {
  .slide-button-visibility-controller:hover {
    .slide-button {
      display: block;
    }
  }
}
